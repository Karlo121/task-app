{"version":3,"sources":["styles/Header.style.ts","styles/Button.style.ts","components/Button.tsx","images/logo.jpg","components/Header.tsx","styles/Task.style.ts","components/Task.tsx","components/Tasks.tsx","styles/global.ts","data/data.ts","styles/AddTask.style.ts","components/AddTask.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledHeader","styled","header","StyledButton","button","props","theme","main","Button","showForm","onClick","text","Header","src","logo","alt","height","title","onAdd","StyledTask","div","isReminder","StyledTimes","Times","Task","task","reminder","onDoubleClick","onToggle","id","size","onDelete","day","Tasks","map","createGlobalStyle","StyledH2","h2","taskData","StyledAddForm","form","StyledFormControl","StyledFormControlCheck","StyledInput","input","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","className","checked","currentTarget","App","tasks","setTasks","setShowForm","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0f9d124.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledHeader = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  color: #2c2f33;\r\n\r\n  h2 {\r\n    color: red;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  display: inline-block;\r\n  background: #2c2f33;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px 15px;\r\n  margin: 5px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  font-size: 15px;\r\n  font-family: inherit;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  :active {\r\n    transform: scale(0.98);\r\n  }\r\n\r\n  background: ${(props) => props.theme.main};\r\n`;\r\n","import React from 'react';\r\nimport { StyledButton } from '../styles/Button.style';\r\n\r\ninterface ButtonProps {\r\n  text: string;\r\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\r\n  showForm: boolean;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\r\n  return (\r\n    <StyledButton\r\n      theme={props.showForm ? { main: '#FF4147' } : { main: '#24BD64' }}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/logo.8e13046f.jpg\";","import React from 'react';\r\n\r\nimport { StyledHeader } from '../styles/Header.style';\r\nimport Button from './Button';\r\nimport logo from '../images/logo.jpg';\r\n\r\ninterface HeaderProps {\r\n  title: string;\r\n  onAdd(): void;\r\n  showForm: boolean;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = (props: HeaderProps): JSX.Element => {\r\n  return (\r\n    <StyledHeader>\r\n      <img src={logo} alt='Logo' height='50px' />\r\n      <h1>{props.title}</h1>\r\n      <Button\r\n        showForm={props.showForm}\r\n        text={props.showForm ? 'Close' : 'Add'}\r\n        onClick={props.onAdd}\r\n      />\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\nimport { Times } from '@styled-icons/fa-solid/Times';\r\n\r\ntype ColorStateForm = {\r\n  isReminder: boolean;\r\n};\r\n\r\nexport const StyledTask = styled.div<ColorStateForm>`\r\n  background: #2c2f33;\r\n  color: white;\r\n  margin: 5px;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n\r\n  border-left: ${(props) => (props.isReminder ? '5px solid #24BD64' : ' ')};\r\n\r\n  h3 {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const StyledTimes = styled(Times)`\r\n  color: white;\r\n`;\r\n","import React from 'react';\r\nimport { StyledTask, StyledTimes } from '../styles/Task.style';\r\n\r\ninterface Props {\r\n  task: {\r\n    text: string;\r\n    day: string;\r\n    id: number;\r\n    reminder: boolean;\r\n  };\r\n  onDelete(id: number): void;\r\n  onToggle(id: number): void;\r\n}\r\n\r\nconst Task: React.FC<Props> = (props: Props) => {\r\n  const { task } = props;\r\n  return (\r\n    <StyledTask\r\n      isReminder={task.reminder}\r\n      onDoubleClick={() => props.onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}\r\n        <StyledTimes size='20' onClick={() => props.onDelete(task.id)} />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </StyledTask>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport Task from './Task';\r\n\r\nexport interface TaskProps {\r\n  id: number;\r\n  text: string;\r\n  day: string;\r\n  reminder: boolean;\r\n}\r\n\r\nexport interface TasksProps {\r\n  task: TaskProps[];\r\n  onDelete(id: number): void;\r\n  onToggle(id: number): void;\r\n}\r\n\r\nconst Tasks: React.FC<TasksProps> = ({ onDelete, task, onToggle }) => {\r\n  return (\r\n    <>\r\n      {task.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport styled from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300&display=swap');\r\n\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  font-family: 'Inter', sans-serif;\r\n  background-color: #2C2F33;\r\n}\r\n\r\n.container {\r\n  max-width: 600px;\r\n  margin: 30px auto;\r\n  overflow: auto;\r\n  min-height: 300px;\r\n  border: 1px solid black;\r\n  padding: 30px;\r\n  border-radius: 5px;\r\n  background-color: white;\r\n}\r\n\r\n.add-form {\r\n  margin-bottom: 40px;\r\n}\r\n\r\nfooter {\r\n  margin-top: 30px;\r\n  text-align: center;\r\n}\r\n\r\n`;\r\n\r\nexport const StyledH2 = styled.h2`\r\n  text-align: center;\r\n  color: #2c2f33;\r\n`;\r\n","export const taskData = [\r\n  {\r\n    text: 'Example Task with reminder',\r\n    day: '01.03.2021 at 18:30',\r\n    id: 0,\r\n    reminder: true,\r\n  },\r\n];\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledAddForm = styled.form`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const StyledFormControl = styled.div`\r\n  margin: 20px 0;\r\n  label {\r\n    display: block;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    height: 40px;\r\n    margin: 5px;\r\n    padding: 3px 7px;\r\n    font-size: 17px;\r\n  }\r\n`;\r\n\r\nexport const StyledFormControlCheck = styled.div`\r\n  margin: 20px 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  label {\r\n    display: block;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    height: 40px;\r\n    margin: 5px;\r\n    padding: 3px 7px;\r\n    font-size: 17px;\r\n  }\r\n  label {\r\n    flex: 1;\r\n  }\r\n  input {\r\n    flex: 2;\r\n    height: 20px;\r\n  }\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  display: inline-block;\r\n  background: #2c2f33;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  margin: 5px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  font-size: 15px;\r\n  font-family: inherit;\r\n  width: 100%;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n  :active {\r\n    transform: scale(0.98);\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport {\r\n  StyledAddForm,\r\n  StyledFormControl,\r\n  StyledFormControlCheck,\r\n  StyledInput,\r\n} from '../styles/AddTask.style';\r\n\r\ninterface AddTaskProps {\r\n  onAdd(task: { text: string; day: string; reminder: boolean }): void;\r\n}\r\n\r\nconst AddTask: React.FC<AddTaskProps> = (props: AddTaskProps) => {\r\n  const [text, setText] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert('Please add a task!');\r\n      return;\r\n    }\r\n\r\n    props.onAdd({ text, day, reminder });\r\n    setText('');\r\n    setDay('');\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <StyledAddForm onSubmit={onSubmit}>\r\n      <StyledFormControl>\r\n        <label>Task</label>\r\n        <input\r\n          type='text'\r\n          value={text}\r\n          onChange={(e) => {\r\n            setText(e.target.value);\r\n          }}\r\n          placeholder='Add Task'\r\n        />\r\n      </StyledFormControl>\r\n      <StyledFormControl>\r\n        <label>Day & Time</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Day & Time'\r\n          value={day}\r\n          onChange={(e) => {\r\n            setDay(e.target.value);\r\n          }}\r\n        />\r\n      </StyledFormControl>\r\n      <StyledFormControlCheck className='form-control-check'>\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type='checkbox'\r\n          value={reminder ? 'true' : 'false'}\r\n          checked={reminder}\r\n          onChange={(e) => {\r\n            setReminder(e.currentTarget.checked);\r\n          }}\r\n        />\r\n      </StyledFormControlCheck>\r\n\r\n      <StyledInput type='submit' value='Save Task' className='btn btn-block' />\r\n    </StyledAddForm>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Tasks, { TaskProps } from './components/Tasks';\nimport GlobalStyle, { StyledH2 } from './styles/global';\nimport { taskData } from './data/data';\nimport AddTask from './components/AddTask';\n\nconst App: React.FC = () => {\n  const [tasks, setTasks] = useState(taskData);\n  const [showForm, setShowForm] = useState(false);\n\n  const addTask = (task: TaskProps): void => {\n    const id = Math.floor(Math.random() * 10000 + 1);\n    const newTask = { ...task, id };\n    setTasks([...tasks, newTask]);\n  };\n\n  const deleteTask = (id: number): void => {\n    setTasks(tasks.filter((task) => id !== task.id));\n  };\n\n  const toggleReminder = (id: number): void => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className='container'>\n      <GlobalStyle />\n      <Header\n        title='Task App'\n        onAdd={() => {\n          setShowForm(!showForm);\n        }}\n        showForm={showForm}\n      />\n      {showForm && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks task={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        <StyledH2>No tasks to show</StyledH2>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}